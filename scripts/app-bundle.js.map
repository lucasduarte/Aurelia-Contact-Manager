{"version":3,"sources":["app.js","contact-detail.js","contact-list.js","environment.js","main.js","messages.js","no-selection.js","utility.js","web-api.js","resources/index.js","resources/elements/loading-indicator.js","C:/dev/contact-manager/src/app.html","C:/dev/contact-manager/src/styles.css","C:/dev/contact-manager/src/contact-detail.html","C:/dev/contact-manager/src/contact-list.html","C:/dev/contact-manager/src/no-selection.html"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { WebAPI } from './web-api';\nimport { inject } from 'aurelia-framework';\n\n@inject(WebAPI)\nexport class App {\n    constructor(api) {\n        this.api = api;\n    }\n    configureRouter(config, router) {\n        config.title = 'Contacts';\n        config.map([\n            { route: '', moduleId: 'no-selection', title: 'Select' },\n            { route: 'contacts/:id', moduleId: 'contact-detail', name: 'contacts' }\n        ]);\n\n        this.router = router;\n    }\n}","import { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { WebAPI } from './web-api';\r\nimport { areEqual } from './utility';\r\nimport { ContactUpdated, ContactViewed } from './messages';\r\nimport { inject } from 'aurelia-framework';\r\n\r\n@inject(WebAPI, EventAggregator)\r\nexport class ContactDetail {\r\n    constructor(WebAPI, EventAggregator) {\r\n        this.api = WebAPI;\r\n        this.ea = EventAggregator;\r\n    }\r\n\r\n    activate(params, routeConfig) {\r\n        this.routeConfig = routeConfig;\r\n\r\n        return this.api.getContactDetails(params.id).then(contact => {\r\n            this.contact = contact;\r\n            this.routeConfig.navModel.setTitle(contact.firstName);\r\n            this.originalContact = JSON.parse(JSON.stringify(contact));\r\n            this.ea.publish(new ContactViewed(contact));\r\n        });\r\n    }\r\n\r\n    get canSave() {\r\n        return this.contact.firstName && this.contact.lastName && !this.api.isRequesting;\r\n    }\r\n\r\n    save() {\r\n        this.api.saveContact(this.contact).then(contact => {\r\n            this.contact = contact;\r\n            this.routeConfig.navModel.setTitle(contact.firstName);\r\n            this.originalContact = JSON.parse(JSON.stringify(contact));\r\n            this.ea.publish(new ContactUpdated(this.contact));\r\n        });\r\n    }\r\n\r\n    canDeactivate() {\r\n        if (!areEqual(this.originalContact, this.contact)) {\r\n            let result = confirm('You have unsaved changes. Are you sure you wish to leave?');\r\n\r\n            if (!result) {\r\n                this.ea.publish(new ContactViewed(this.contact));\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}","import { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { WebAPI } from './web-api';\r\nimport { ContactUpdated, ContactViewed } from './messages';\r\nimport { inject } from 'aurelia-framework';\r\n\r\n@inject(WebAPI, EventAggregator)\r\nexport class ContactList {\r\n    constructor(WebAPI, ea) {\r\n        this.api = WebAPI;\r\n        this.contacts = [];\r\n\r\n        ea.subscribe(ContactViewed, msg => this.select(msg.contact));\r\n        ea.subscribe(ContactUpdated, msg => {\r\n            let id = msg.contact.id;\r\n            let found = this.contacts.find(x => x.id == id);\r\n            Object.assign(found, msg.contact);\r\n        })\r\n    }\r\n\r\n    created() {\r\n        this.api.getContactList().then(contacts => this.contacts = contacts);\r\n    }\r\n\r\n    select(contact) {\r\n        this.selectedId = contact.id;\r\n        return true;\r\n    }\r\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class ContactUpdated {\r\n    constructor(contact) {\r\n        this.contact = contact;\r\n    }\r\n}\r\n\r\nexport class ContactViewed {\r\n    constructor(contact) {\r\n        this.contact = contact;\r\n    }\r\n}","export class NoSelection {\r\n    constructor() {\r\n        this.message = \"Please Select a Contact.\";\r\n    }\r\n}","export function areEqual(obj1, obj2) {\n\treturn Object.keys(obj1).every((key) => obj2.hasOwnProperty(key) && (obj1[key] === obj2[key]));\n};","let latency = 200;\nlet id = 0;\n\nfunction getId(){\n  return ++id;\n}\n\nlet contacts = [\n  {\n    id:getId(),\n    firstName:'John',\n    lastName:'Tolkien',\n    email:'tolkien@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Clive',\n    lastName:'Lewis',\n    email:'lewis@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Owen',\n    lastName:'Barfield',\n    email:'barfield@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Charles',\n    lastName:'Williams',\n    email:'williams@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Roger',\n    lastName:'Green',\n    email:'green@inklings.com',\n    phoneNumber:'867-5309'\n  }\n];\n\nexport class WebAPI {\n  isRequesting = false;\n  \n  getContactList(){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let results = contacts.map(x =>  { return {\n          id:x.id,\n          firstName:x.firstName,\n          lastName:x.lastName,\n          email:x.email\n        }});\n        resolve(results);\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  getContactDetails(id){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let found = contacts.filter(x => x.id == id)[0];\n        resolve(JSON.parse(JSON.stringify(found)));\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  saveContact(contact){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let instance = JSON.parse(JSON.stringify(contact));\n        let found = contacts.filter(x => x.id == contact.id)[0];\n\n        if(found){\n          let index = contacts.indexOf(found);\n          contacts[index] = instance;\n        }else{\n          instance.id = getId();\n          contacts.push(instance);\n        }\n\n        this.isRequesting = false;\n        resolve(instance);\n      }, latency);\n    });\n  }\n}\n","export function configure(config) {\n    config.globalResources(['./elements/loading-indicator']);\n}","import * as nprogress from 'nprogress';\r\nimport { bindable, noView, decorators } from 'aurelia-framework';\r\n\r\nexport let LoadingIndicator = decorators(\r\n    noView(['nprogress/nprogress.css']),\r\n    bindable({ name: 'loading', defaultValue: false })\r\n).on(class {\r\n    loadingChanged(newValue) {\r\n        if (newValue) {\r\n            nprogress.start();\r\n        } else {\r\n            nprogress.done();\r\n        }\r\n    }\r\n});",null,null,null,null,null],"sourceRoot":"..\\src"}